version: 2.1

orbs:
  slack: circleci/slack@4.4.4

commands:
  attach:
    steps:
      - attach_workspace:
          at: /home/circleci
  install-submodules:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "87:b9:24:d8:b8:2f:de:8b:44:bf:da:d4:d7:2c:e1:1a"
      - run:
          command: |
            git submodule init
            git submodule sync
            git submodule update
  install-python-libraries:
    steps:
      - run: pip install pipenv
      - run: pipenv install --quiet --deploy --dev --python=3.10
  compile-protobuf:
    steps:
      - run: source .env && sudo ./tools/protobuf/install.sh "$PROTOBUF_VERSION"
      - run: ./tools/protobuf/compile.sh
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project/src/python/zigopt/protobuf/gen
  install-node:
    steps:
      - run: cp yarn.lock yarn.lock.old
      - run: yarn install
      - run: if ! diff yarn.lock yarn.lock.old >/dev/null; then echo 'yarn.lock has changed, make sure to `yarn install` and commit it'; exit 1; fi
      - run: rm yarn.lock.old
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project/node_modules
  start-service:
    steps:
      - run:
          name: << parameters.description >>
          command: ./ci/compose.sh up << parameters.service >>
          background: true
    parameters:
      description:
        type: string
      service:
        type: string
  start-sigopt-service:
    steps:
      - start-service:
          description: SigOpt << parameters.description >>
          service: << parameters.service >>
    parameters:
      description:
        type: string
      service:
        type: string
  initialize-config-directory:
    steps:
      - run:
          name: Initialize SigOpt Server config directory
          command: |
            ./ci/compose.sh run -Ti --rm init-config sh -e \<<EOF
              cp /sigopt-server/config/circleci/* /etc/sigopt/server-config/
              echo CHANGEME123 >/etc/minio/password.txt
            EOF
  start-web-server:
    steps:
      - start-sigopt-service:
          description: Web Server
          service: web-server
      - run: ./ci/wait_for.sh url https://sigopt.ninja:4443/login
  store-junit-test-results:
    steps:
      - store_test_results:
          path: junit-results
      - store_artifacts:
          path: junit-results
          prefix: junit-results
  generate-openapi-docs:
    steps:
      - checkout
      - attach
      - install-python-libraries
      - run:
          name: Generate swagger file
          command: pipenv run env SIGOPT_SERVER_CONFIG_DIR=./config/circleci ./pp src/python/zigopt/api/documentation.py
          environment:
            SIGOPT_SWAGGER_PATH: /home/circleci/project/
            SIGOPT_SWAGGER_FILENAME: swagger.json
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - project
  validate-openapi-docs:
    steps:
      - attach
      - install-submodules
      - run:
          name: Check that swagger file exists and validate it with swagger validator
          command: node ./ci/validate_swagger.js /home/circleci/project/swagger.json

executors:
  basic:
    docker:
      - image: cimg/base:current-22.04
  sigopt-python-only:
    docker:
      - image: cimg/python:3.10
    resource_class: small
  sigopt-node-only:
    docker:
      - image: cimg/node:16.18
    resource_class: small

jobs:
  checkout-code:
    docker:
      - image: alpine/git
    resource_class: small
    steps:
      - checkout
      - run: git reflog expire --expire=now --all
      - run: git repack -ad
      - run: git prune
      - persist_to_workspace:
          root: /root
          paths:
            - .ssh
            - project
  compile-protobuf:
    executor: basic
    resource_class: small
    steps:
      - checkout
      - compile-protobuf
  setup-web:
    executor: sigopt-node-only
    resource_class: large
    steps:
      - checkout
      - run: sudo apt-get update -yqq && sudo apt-get install nasm
      - install-node
  documentation-generation:
    executor: sigopt-python-only
    steps:
      - generate-openapi-docs
  documentation-validation:
    executor: sigopt-node-only
    steps:
      - validate-openapi-docs
  eval-circleci:
    docker:
      - image: circleci/buildpack-deps:curl
    resource_class: small
    steps:
      # Fails on non-20x error code, https://superuser.com/a/1249678
      - run: "curl -X POST --silent --show-error --fail -u ${EVAL_FRAMEWORK_BUILD_TOKEN}: https://circleci.com/api/v2/project/gh/sigopt/eval-framework/pipeline"

workflows:
  main:
    jobs:
      - checkout-code
      - setup-web
      - compile-protobuf
      - documentation-generation:
          requires:
            - compile-protobuf
      - documentation-validation:
          requires:
            - setup-web
            - documentation-generation
