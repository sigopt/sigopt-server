name: integration tests
run-name: Integration tests for ${{ github.repository }}@${{ github.ref }}
on:
  push: {}
jobs:
  service:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: sudo mkdir -p /etc/apt/keyrings
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - run: sudo apt-get remove -yqq moby-buildx moby-compose moby-cli
      - run: |
          echo \
            "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu focal stable" \
           | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - run: |
          sudo apt-get update -yqq && sudo apt-get install -yqq \
            docker-ce-cli=5:20.10.23~3-0~ubuntu-focal \
            docker-compose-plugin=2.16.0-1~ubuntu.20.04~focal
      - run: ./ci/run_integration_test.sh test/integration/service/
      - name: Docker logs
        if: always()
        run: |
          set +e
          ./ci/compose.sh logs postgres
          ./ci/compose.sh logs redis
          ./ci/compose.sh logs minio
          ./ci/compose.sh logs smtp
  v1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite:
          - admin
          - authentication
          - endpoints
          - features
          - requests
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: sudo mkdir -p /etc/apt/keyrings
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - run: sudo apt-get remove -yqq moby-buildx moby-compose moby-cli
      - run: |
          echo \
            "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu focal stable" \
           | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - run: |
          sudo apt-get update -yqq && sudo apt-get install -yqq \
            docker-ce-cli=5:20.10.23~3-0~ubuntu-focal \
            docker-compose-plugin=2.16.0-1~ubuntu.20.04~focal
      - run: ./ci/create_development_tls_certs.sh
      - run: ./ci/run_integration_test.sh test/integration/v1/${{ matrix.suite }}/ qworker qworker-analytics api nginx
      - name: Docker logs
        if: always()
        run: |
          set +e
          ./ci/compose.sh logs postgres
          ./ci/compose.sh logs redis
          ./ci/compose.sh logs minio
          ./ci/compose.sh logs smtp
          ./ci/compose.sh logs qworker
          ./ci/compose.sh logs qworker-analytics
          ./ci/compose.sh logs api
          ./ci/compose.sh logs nginx
  web:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: sudo mkdir -p /etc/apt/keyrings
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - run: sudo apt-get remove -yqq moby-buildx moby-compose moby-cli
      - run: |
          echo \
            "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu focal stable" \
           | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - run: |
          sudo apt-get update -yqq && sudo apt-get install -yqq \
            docker-ce-cli=5:20.10.23~3-0~ubuntu-focal \
            docker-compose-plugin=2.16.0-1~ubuntu.20.04~focal
      - run: ./ci/create_development_tls_certs.sh
      - run: make submodules
      - run: ./ci/run_integration_test.sh test/integration/web/ qworker qworker-analytics api web-server nginx
      - name: Docker logs
        if: always()
        run: |
          set +e
          ./ci/compose.sh logs postgres
          ./ci/compose.sh logs redis
          ./ci/compose.sh logs minio
          ./ci/compose.sh logs smtp
          ./ci/compose.sh logs qworker
          ./ci/compose.sh logs qworker-analytics
          ./ci/compose.sh logs api
          ./ci/compose.sh logs web-server
          ./ci/compose.sh logs nginx
  browser:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite:
          - admin
          - experiment
          - global
          - home
          - organization
          - project
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: sudo mkdir -p /etc/apt/keyrings
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - run: sudo apt-get remove -yqq moby-buildx moby-compose moby-cli
      - run: |
          echo \
            "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu focal stable" \
           | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - run: |
          sudo apt-get update -yqq && sudo apt-get install -yqq \
            docker-ce-cli=5:20.10.23~3-0~ubuntu-focal \
            docker-compose-plugin=2.16.0-1~ubuntu.20.04~focal
      - run: ./ci/create_development_tls_certs.sh
      - run: make submodules
      - run: ./ci/run_integration_test.sh test/integration/browser/tests/interaction/${{ matrix.suite }} qworker qworker-analytics api web-server nginx
      - name: Docker logs
        if: always()
        run: |
          set +e
          ./ci/compose.sh logs postgres
          ./ci/compose.sh logs redis
          ./ci/compose.sh logs minio
          ./ci/compose.sh logs smtp
          ./ci/compose.sh logs qworker
          ./ci/compose.sh logs qworker-analytics
          ./ci/compose.sh logs api
          ./ci/compose.sh logs web-server
          ./ci/compose.sh logs nginx
  worker-health:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: sudo mkdir -p /etc/apt/keyrings
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - run: sudo apt-get remove -yqq moby-buildx moby-compose moby-cli
      - run: |
          echo \
            "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu focal stable" \
           | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - run: |
          sudo apt-get update -yqq && sudo apt-get install -yqq \
            docker-ce-cli=5:20.10.23~3-0~ubuntu-focal \
            docker-compose-plugin=2.16.0-1~ubuntu.20.04~focal
      - run: ./ci/init_config.sh
      - run: ./ci/run_container_bg.sh postgres
      - run: ./ci/run_container_fg.sh createdb
      - run: ./ci/compose.sh build --progress=plain qworker qworker-analytics
      - run: ./ci/worker_health_fail.sh
      - run: ./ci/run_container_bg.sh redis
      - run: ./ci/worker_health_pass.sh
      - name: Docker logs
        if: always()
        run: |
          set +e
          ./ci/compose.sh logs postgres
          ./ci/compose.sh logs redis
          ./ci/compose.sh logs qworker
          ./ci/compose.sh logs qworker-analytics
  client:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: sudo mkdir -p /etc/apt/keyrings
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - run: sudo apt-get remove -yqq moby-buildx moby-compose moby-cli
      - run: |
          echo \
            "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu focal stable" \
           | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - run: |
          sudo apt-get update -yqq && sudo apt-get install -yqq \
            docker-ce-cli=5:20.10.23~3-0~ubuntu-focal \
            docker-compose-plugin=2.16.0-1~ubuntu.20.04~focal
      - run: ./ci/create_development_tls_certs.sh
      - run: ./ci/init_config.sh
      - run: ./ci/run_container_bg.sh postgres
      - run: ./ci/run_container_fg.sh createdb
      - run: ./ci/run_container_bg.sh redis
      - run: ./ci/run_container_bg.sh qworker
      - run: ./ci/run_container_bg.sh api
      - run: ./ci/run_container_bg.sh nginx
      - run: ./ci/run_container_fg.sh test-client test/run_client_integration_tests.sh main
      - name: Docker logs
        if: always()
        run: |
          set +e
          ./ci/compose.sh logs postgres
          ./ci/compose.sh logs redis
          ./ci/compose.sh logs qworker
          ./ci/compose.sh logs qworker-analytics
          ./ci/compose.sh logs api
          ./ci/compose.sh logs nginx
