version: "3.6"

networks:
  default:
    driver: bridge

services:
  init-config:
    image: busybox:stable
    command:
      - sh
      - -e
      - -c
      - |
        rm -rf /etc/sigopt/server-config/*
        cp /sigopt-server/config/sigopt/* /etc/sigopt/server-config/
        cat <<'EOF' >/etc/sigopt/server-config/00_secrets.yml
        user_uploads:
          s3:
            aws_secret_access_key: '$MINIO_ROOT_PASSWORD'
        web:
          cookiejar_credentials:
            secretAccessKey: '$MINIO_ROOT_PASSWORD'
        EOF
        echo '$MINIO_ROOT_PASSWORD' >/etc/minio/password.txt
    volumes:
      - ./config:/sigopt-server/config
      - minio-config:/etc/minio
      - server-config:/etc/sigopt/server-config
    read_only: true
    security_opt:
      - "no-new-privileges:true"
  test-runner:
    build: &test-runner-build
      dockerfile: docker/images/test-runner/Dockerfile
      args:
        - NODE_MAJOR
        - PROTOBUF_VERSION
        - PYTHON_MAJOR
        - PYTHON_MINOR
    environment:
      - ENABLE_CONTRACTS=x
      - &server-config-env SIGOPT_SERVER_CONFIG_DIR
      - ALLOW_SLOW=1
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/sigopt-root-ca.crt
      - &api-tls-verify-env SIGOPT_API_VERIFY_SSL_CERTS=/etc/ssl/certs/sigopt-root-ca.crt
    volumes:
      - &rootca-volume ./artifacts/tls/root-ca.crt:/etc/ssl/certs/sigopt-root-ca.crt:ro
      - &sigopt-config-volume server-config:/etc/sigopt/server-config
      - ./junit-results:/sigopt-server/junit-results
      - ./screenshots/failure:/sigopt-server/screenshots/failure
      - ./failure_console_logs:/sigopt-server/failure_console_logs
      - /dev/shm:/dev/shm
      - &pg-sock-volume pg-sock:/var/run/postgresql
      - &redis-run-volume redis-run:/var/run/redis
    shm_size: 1g
    read_only: true
    tmpfs:
      - /tmp/
      - /var/tmp/
      - /sigopt-server/.pytest_cache/
    security_opt:
      - "no-new-privileges:true"
  smtp:
    build:
      <<: *test-runner-build
    restart: on-failure:5
    command:
      - python
      - -m
      - integration.utils.mail
      - --send-port=6001
      - --receive-port=6002
    networks:
      default:
        aliases:
          - smtp.internal.sigopt.ninja
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 64M
          pids: 16
    read_only: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6002/health"]
      interval: "30s"
      timeout: "10s"
      retries: 3
      start_period: "30s"
    security_opt:
      - "no-new-privileges:true"
  createdb:
    build: &zigopt-build
      dockerfile: docker/images/zigopt/Dockerfile
      args:
        - PROTOBUF_VERSION
        - PYTHON_MAJOR
        - PYTHON_MINOR
    entrypoint:
      - python
      - -m
      - zigopt.utils.create_database
    environment:
      - ENABLE_CONTRACTS
      - *server-config-env
    read_only: true
    volumes:
      - *sigopt-config-volume
      - *pg-sock-volume
    tmpfs:
      - /tmp
    security_opt:
      - "no-new-privileges:true"
  nginx:
    build:
      dockerfile: docker/images/nginx/Dockerfile
      args:
        - NGINX_VERSION
    restart: on-failure:5
    volumes:
      - ./artifacts/tls:/etc/ssl/sigopt:ro
    tmpfs:
      - /var/cache/nginx
      - /var/run/nginx
    networks:
      default:
        aliases:
          - sigopt.ninja
    ports:
      - "127.0.0.1:4443:4443" # web app (and api via /api)
      - "127.0.0.1:9000:9000" # minio
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 64M
          pids: 2
    read_only: true
    healthcheck:
      test: ["CMD", "test", "-f", "/var/run/nginx/nginx.pid"]
      interval: "1s"
      timeout: "1s"
      retries: 0
    security_opt:
      - "no-new-privileges:true"
  api:
    build:
      <<: *zigopt-build
    restart: on-failure:5
    command:
      - /usr/local/bin/gunicorn_serve.sh
      - -b
      - 0.0.0.0:5000
      - zigopt.api.main:GUNICORN_ENTRY_POINT
    environment: &zigopt_environment
      - ENABLE_CONTRACTS
      - *server-config-env
      - sigopt_server_version
    volumes:
      - *sigopt-config-volume
      - *pg-sock-volume
      - *redis-run-volume
    tmpfs:
      - /tmp
    networks:
      default:
        aliases:
          - api.internal.sigopt.ninja
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
          pids: 64
    read_only: true
    healthcheck:
      test:
        - CMD
        - python
        - -c
        - |
          import requests
          requests.get("http://localhost:5000/health").raise_for_status()
      interval: "30s"
      timeout: "10s"
      retries: 3
      start_period: "15s"
    security_opt:
      - "no-new-privileges:true"
  web-server:
    build:
      dockerfile: docker/images/web/Dockerfile
      args:
        - NODE_MAJOR
    environment:
      - *server-config-env
      - "NODE_EXTRA_CA_CERTS=/sigopt-server/artifacts/tls/root-ca.crt"
      - sigopt_server_version
      - ALLOW_DECRYPT_COOKIE_ENDPOINT=1
    volumes:
      - ./artifacts/tls:/sigopt-server/artifacts/tls:ro
      - *sigopt-config-volume
    networks:
      default:
        aliases:
          - app.internal.sigopt.ninja
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 4G
          pids: 64
    read_only: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000"]
      interval: "10s"
      timeout: "10s"
      retries: 3
      start_period: "2m"
    security_opt:
      - "no-new-privileges:true"
  qworker:
    build:
      <<: *zigopt-build
    restart: on-failure:5
    command:
      - python
      - -m
      - zigopt.queue.api
      - optimization
    environment: *zigopt_environment
    volumes:
      - *sigopt-config-volume
      - *pg-sock-volume
      - *redis-run-volume
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
          pids: 32
    read_only: true
    healthcheck: &qworker-healthcheck
      test:
        - CMD
        - bash
        - -e
        - -opipefail
        - -c
        - ps awx | grep zigopt.queue.api
      interval: "1s"
      timeout: "1s"
      retries: 1
      start_period: "10s"
    security_opt:
      - "no-new-privileges:true"
  qworker-analytics:
    build:
      <<: *zigopt-build
    restart: on-failure:5
    command:
      - python
      - -m
      - zigopt.queue.api
      - analytics
    environment: *zigopt_environment
    volumes:
      - *sigopt-config-volume
      - *pg-sock-volume
      - *redis-run-volume
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
          pids: 32
    read_only: true
    healthcheck:
      <<: *qworker-healthcheck
    security_opt:
      - "no-new-privileges:true"

  postgres:
    restart: on-failure:5
    image: "postgres:${POSTGRES_VERSION}"
    volumes:
      - *pg-sock-volume
      - pg-data:/var/lib/postgresql/data
    tmpfs:
      - /tmp
    network_mode: none
    read_only: true
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
          pids: 32
    healthcheck:
      test:
        ["CMD", "psql", "-h", "localhost", "-U", "postgres", "-c", "SELECT 1;"]
      interval: "1s"
      timeout: "1s"
      retries: 0
      start_period: "10s"
    security_opt:
      - "no-new-privileges:true"
  redis:
    restart: on-failure:5
    image: "redis:${REDIS_VERSION}"
    entrypoint:
      - redis-server
    command:
      - /etc/redis/redis.conf
    volumes:
      - *redis-run-volume
      - ./redis.conf:/etc/redis/redis.conf
    network_mode: none
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 128M
          pids: 16
    read_only: true
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: "1s"
      timeout: "1s"
      retries: 0
      start_period: "10s"
    security_opt:
      - "no-new-privileges:true"
  init-minio-cookiejar:
    image: "quay.io/minio/mc"
    entrypoint: ["/bin/sh", "-e", "-c"]
    command:
      - |
        mc alias set sigopt http://minio.internal.sigopt.ninja:9000 ROOTUSER '$MINIO_ROOT_PASSWORD'
        mc mb --ignore-existing sigopt/sigopt-cookiejar
    read_only: true
    tmpfs:
      - /root/.mc
    security_opt:
      - "no-new-privileges:true"
  init-minio-filestorage:
    image: "quay.io/minio/mc"
    entrypoint: ["/bin/sh", "-e", "-c"]
    command:
      - |
        mc alias set sigopt http://minio.internal.sigopt.ninja:9000 ROOTUSER '$MINIO_ROOT_PASSWORD'
        mc mb --ignore-existing sigopt/sigopt-user-uploads
    read_only: true
    tmpfs:
      - /root/.mc
    security_opt:
      - "no-new-privileges:true"
  minio:
    restart: on-failure:5
    image: "quay.io/minio/minio"
    entrypoint:
      - sh
      - -e
      - -c
      - |
        export MINIO_ROOT_PASSWORD="$$(cat /root/.minio/password.txt)"
        exec /usr/bin/docker-entrypoint.sh server /var/lib/minio/data
    environment:
      - MINIO_ROOT_USER=ROOTUSER
    volumes:
      - minio-data:/var/lib/minio/data
      - minio-config:/root/.minio
    networks:
      default:
        aliases:
          - minio.internal.sigopt.ninja
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 256M
          pids: 64
    read_only: true
    healthcheck:
      test: ["CMD", "curl", "http://localhost:9000"]
      interval: "5s"
      timeout: "1s"
      retries: 0
      start_period: "10s"
    security_opt:
      - "no-new-privileges:true"

volumes:
  minio-config: {}
  minio-data: {}
  pg-data: {}
  pg-sock: {}
  redis-run: {}
  sigopt-python: {}
  server-config: {}
